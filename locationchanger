#!/bin/bash

# automatically change configuration of Mac OS X based on location
# author: Rocco Georgi <rocco@pavingways.com>
# version: 0.4.0

# original author: Onne Gorter <o.gorter@gmail.com>
# url: http://tech.inhelsinki.nl/locationchanger/
# version: 0.4

# redirect all IO to a logfile
mkdir -p /usr/local/var/log
exec &>/usr/local/var/log/locationchanger.log
# redirect all IO to /dev/null (comment this in if you don#t want to write to logfile)
#exec 1>/dev/null 2>/dev/null

# get a little breather before we get data for things to settle down
sleep 2

# get SSID
SSID=`/System/Library/PrivateFrameworks/Apple80211.framework/Versions/A/Resources/airport -I | awk '/ SSID:/ {print $2}'`
echo `date` "New SSID found: $SSID"

# empty location var
LOCATION=

# LOCATIONS
# (use to be used Location name here)
# =============================================
Location_Automatic="Automatic"
Location_Office="Barnardos Office"

# SSIDS
# =====
SSID_Dev="DEV_786"
SSID_Office="Barn_Corp"


# SSID -> LOCATION mapping
case $SSID in
  $SSID_Dev          ) LOCATION="$Location_Automatic";;
  $SSID_Office  ) LOCATION="$Location_Office";;
  # ... add more here
esac
  REASON="SSID changed to $SSID"


# still didn't get a location -> use Location_Automatic
if [ -z "$LOCATION" ]; then
  LOCATION="$Location_Automatic"
  REASON="Automatic Fallback"
fi

# change network location
scselect "$LOCATION"

case $LOCATION in
  $Location_Automatic )
    osascript -e 'display notification "Network Location Changed to Automatic" with title "Network Location Changed"'
  ;;

  $Location_Office )
    osascript -e 'display notification "Network Location Changed to Barnardos office" with title "Network Location Changed"'
  ;;

  $Location_Dev )
    osascript -e 'display notification "Network Location Changed to Dev" with title "Network Location Changed"'
  ;;
  # ... add more here
esac

echo "--> Location Changer: $LOCATION - $REASON"

exit 0
